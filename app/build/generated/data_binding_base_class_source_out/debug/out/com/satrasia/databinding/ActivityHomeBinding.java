// Generated by view binder compiler. Do not edit!
package com.satrasia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.gms.maps.MapView;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.mikhaellopez.circularimageview.CircularImageView;
import com.satrasia.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CircularImageView CircularImageView;

  @NonNull
  public final TextView etName;

  @NonNull
  public final MapView map;

  @NonNull
  public final LinearLayout mapContainer;

  @NonNull
  public final BottomNavigationView nav;

  @NonNull
  public final FrameLayout navhost;

  @NonNull
  public final ExtendedFloatingActionButton newButtonTask;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final RecyclerView toDoListRecyclerView;

  private ActivityHomeBinding(@NonNull LinearLayout rootView,
      @NonNull CircularImageView CircularImageView, @NonNull TextView etName, @NonNull MapView map,
      @NonNull LinearLayout mapContainer, @NonNull BottomNavigationView nav,
      @NonNull FrameLayout navhost, @NonNull ExtendedFloatingActionButton newButtonTask,
      @NonNull SwipeRefreshLayout swipeRefreshLayout, @NonNull RecyclerView toDoListRecyclerView) {
    this.rootView = rootView;
    this.CircularImageView = CircularImageView;
    this.etName = etName;
    this.map = map;
    this.mapContainer = mapContainer;
    this.nav = nav;
    this.navhost = navhost;
    this.newButtonTask = newButtonTask;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.toDoListRecyclerView = toDoListRecyclerView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CircularImageView;
      CircularImageView CircularImageView = ViewBindings.findChildViewById(rootView, id);
      if (CircularImageView == null) {
        break missingId;
      }

      id = R.id.etName;
      TextView etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.map;
      MapView map = ViewBindings.findChildViewById(rootView, id);
      if (map == null) {
        break missingId;
      }

      id = R.id.mapContainer;
      LinearLayout mapContainer = ViewBindings.findChildViewById(rootView, id);
      if (mapContainer == null) {
        break missingId;
      }

      id = R.id.nav;
      BottomNavigationView nav = ViewBindings.findChildViewById(rootView, id);
      if (nav == null) {
        break missingId;
      }

      id = R.id.navhost;
      FrameLayout navhost = ViewBindings.findChildViewById(rootView, id);
      if (navhost == null) {
        break missingId;
      }

      id = R.id.newButtonTask;
      ExtendedFloatingActionButton newButtonTask = ViewBindings.findChildViewById(rootView, id);
      if (newButtonTask == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.toDoListRecyclerView;
      RecyclerView toDoListRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (toDoListRecyclerView == null) {
        break missingId;
      }

      return new ActivityHomeBinding((LinearLayout) rootView, CircularImageView, etName, map,
          mapContainer, nav, navhost, newButtonTask, swipeRefreshLayout, toDoListRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
