// Generated by view binder compiler. Do not edit!
package com.satrasia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.satrasia.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAccountManagerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final Button btnChangePassword;

  @NonNull
  public final Button btnDeleteAccount;

  @NonNull
  public final Button btnSaveEmail;

  @NonNull
  public final Button btnSaveName;

  @NonNull
  public final Button btnSavePhoneNumber;

  @NonNull
  public final TextView etEmail;

  @NonNull
  public final TextView etName;

  @NonNull
  public final TextView etNoTelp;

  @NonNull
  public final EditText updateEmail;

  @NonNull
  public final EditText updateName;

  @NonNull
  public final EditText updatePhoneNumber;

  private ActivityAccountManagerBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton btnBack, @NonNull Button btnChangePassword,
      @NonNull Button btnDeleteAccount, @NonNull Button btnSaveEmail, @NonNull Button btnSaveName,
      @NonNull Button btnSavePhoneNumber, @NonNull TextView etEmail, @NonNull TextView etName,
      @NonNull TextView etNoTelp, @NonNull EditText updateEmail, @NonNull EditText updateName,
      @NonNull EditText updatePhoneNumber) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnChangePassword = btnChangePassword;
    this.btnDeleteAccount = btnDeleteAccount;
    this.btnSaveEmail = btnSaveEmail;
    this.btnSaveName = btnSaveName;
    this.btnSavePhoneNumber = btnSavePhoneNumber;
    this.etEmail = etEmail;
    this.etName = etName;
    this.etNoTelp = etNoTelp;
    this.updateEmail = updateEmail;
    this.updateName = updateName;
    this.updatePhoneNumber = updatePhoneNumber;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAccountManagerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAccountManagerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_account_manager, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAccountManagerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnChangePassword;
      Button btnChangePassword = ViewBindings.findChildViewById(rootView, id);
      if (btnChangePassword == null) {
        break missingId;
      }

      id = R.id.btnDeleteAccount;
      Button btnDeleteAccount = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteAccount == null) {
        break missingId;
      }

      id = R.id.btnSaveEmail;
      Button btnSaveEmail = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveEmail == null) {
        break missingId;
      }

      id = R.id.btnSaveName;
      Button btnSaveName = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveName == null) {
        break missingId;
      }

      id = R.id.btnSavePhoneNumber;
      Button btnSavePhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (btnSavePhoneNumber == null) {
        break missingId;
      }

      id = R.id.etEmail;
      TextView etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etName;
      TextView etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.etNoTelp;
      TextView etNoTelp = ViewBindings.findChildViewById(rootView, id);
      if (etNoTelp == null) {
        break missingId;
      }

      id = R.id.updateEmail;
      EditText updateEmail = ViewBindings.findChildViewById(rootView, id);
      if (updateEmail == null) {
        break missingId;
      }

      id = R.id.updateName;
      EditText updateName = ViewBindings.findChildViewById(rootView, id);
      if (updateName == null) {
        break missingId;
      }

      id = R.id.updatePhoneNumber;
      EditText updatePhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (updatePhoneNumber == null) {
        break missingId;
      }

      return new ActivityAccountManagerBinding((LinearLayout) rootView, btnBack, btnChangePassword,
          btnDeleteAccount, btnSaveEmail, btnSaveName, btnSavePhoneNumber, etEmail, etName,
          etNoTelp, updateEmail, updateName, updatePhoneNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
